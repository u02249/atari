---
- hosts: localhost

  vars:
    aws_access_key: 
    aws_secret_key:
    ec2_env: bla
    ec2_instance_user: ubuntu
    ec2_region: us-east-2

  tasks:
  - name: Including vars of instances.yml into the 'instances' variable.
    include_vars:
      file: instances.yml
      name: data

  - name: Creating security group.
    ec2_group:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      name: "public_sec_group"
      description: "Sec group for public server"
      region: "{{ ec2_region }}"
      rules:
        - proto: tcp
          ports:
            - 22
            - 80
            - 443
          cidr_ip: 0.0.0.0/0
          rule_desc: allow all on ssh http https port
    register: result_sec_group

  - name: Creating ec2 instances and installing nginx into them.
    amazon.aws.ec2:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      id: "{{ item.0.name }}-{{ ec2_env | default('dev') }}-{{ item.1.seq_num }}"
      key_name: gitlab_key
      region: us-east-2
      group_id: "{{ result_sec_group.group_id }}"
      instance_type: t2.micro
      image: ami-0996d3051b72b5b2c
      wait: yes
      wait_timeout: 500
      count: 1
      monitoring: no
      vpc_subnet_id: "{{ item.1.subnet }}"
      assign_public_ip: "{{ item.1.assign_public_ip | default('no') }}"
      instance_tags:
        env: "{{ ec2_env }}"
        name: "{{ item.0.name }}-{{ env | default('prod') }}-{{ item.1.seq_num }}"
        group: "{{ item.0.name }}"
      user_data: |
        #!/bin/sh
        sudo apt-get install nginx -y
    with_subelements:
    - "{{ data.instances }}"
    - subnets
    register: ec2_created

  - name: Add public hosts in inventory
    add_host:
      hostname: "{{ item.1.tags.name }}"
      ansible_ssh_host: "{{ (item.1.public_dns_name == '') | ternary(item.1.private_dns_name, item.1.public_dns_name) }}" 
      ansible_user: "{{ ec2_instance_user }}"
      placement: "{{ item.1.placement }}"
      groups: "{{ item.1.tags.group }}"
    with_subelements:
    - "{{ ec2_created.results }}"
    - instances

- hosts: web
  tasks:
  - name: Test jinja2template
    template:
      src: default.j2
      dest: /etc/nginx/sites-avalible/default
